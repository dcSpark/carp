version: "3.7"

services:
  cardano-node:
    image: inputoutput/cardano-node:1.35.3-configs 
    #user: "${UID}:${GID}"
    environment:
      NETWORK: ${NETWORK}
    ports:
      - "${CARDANO_PORT}:3001"
    volumes:
      - ${TOP_DIR}/${INSTANCE}/cardano/data:/data/db
      - ${TOP_DIR}/${INSTANCE}/cardano/ipc:/ipc
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  carp-postgres:
    image: postgres
    #user: "${UID}:${GID}"
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - ${TOP_DIR}/${INSTANCE}/postgres/initdb:/docker-entrypoint-initdb.d
      - ${TOP_DIR}/${INSTANCE}/postgres/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  carp:
    image: dcspark/carp
    #user: "${UID}:${GID}"
    restart: always
    environment:
      SOCKET: /ipc/node.socket 
      DATABASE_URL: $DATABASE_URL
      NETWORK: $NETWORK
    volumes:
      - ${TOP_DIR}/${INSTANCE}/cardano/ipc:/ipc 
    depends_on:
      - carp-postgres
      - cardano-node

  carp-web:
    image: dcspark/carp-webserver
    environment:
      DATABASE_URL: $DATABASE_URL
    ports:
      - "${CARP_WEB_PORT}:3000"

